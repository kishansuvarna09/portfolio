name: Deploy project

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest
        container:
            image: node:22
        steps:
            - uses: actions/checkout@v2
              with:
                  node-version: 22

            - name: Setup SSH Key
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
                  chmod 600 ~/.ssh/id_ed25519
                  ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

            - name: Create .env file
              run: |
                  echo "SSL_PATH=${{vars.SSL_CERT_PATH}}" > .env
                  cat .env

            - name: Cleanup existing files
              run: |
                  ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "
                  rm -rf ${{vars.SSH_PATH}}/{*,.*} 2>/dev/null || true"

            - name: Deploy using SCP
              run: scp -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 -r . ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}}:${{vars.SSH_PATH}}

            - name: Restart server
              run: |
                  ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "
                  cd ${{vars.SSH_PATH}} && \
                  docker-compose down && docker-compose up --force-recreate --build -d"

            - name: Cleanup after deployment
              run: |
                  ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "
                  rm -rf ${{vars.SSH_PATH}}/{*,.*} 2>/dev/null || true"
